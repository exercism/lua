local Garden = require('kindergarten-garden')

describe('kindergarten-garden', function()
  describe('partial garden', function()
    it('garden with single student', function()
      local garden = Garden('RC\nGG')
      assert.same({ 'radishes', 'clover', 'grass', 'grass' }, garden.plants('Alice'))
    end)

    it('different garden with single student', function()
      local garden = Garden('VC\nRC')
      assert.same({ 'violets', 'clover', 'radishes', 'clover' }, garden.plants('Alice'))
    end)

    it('garden with two students', function()
      local garden = Garden('VVCG\nVVRC')
      assert.same({ 'clover', 'grass', 'radishes', 'clover' }, garden.plants('Bob'))
    end)

    describe('multiple students for the same garden with three students', function()
      it('second student\'s garden', function()
        local garden = Garden('VVCCGG\nVVCCGG')
        assert.same({ 'clover', 'clover', 'clover', 'clover' }, garden.plants('Bob'))
      end)

      it('third student\'s garden', function()
        local garden = Garden('VVCCGG\nVVCCGG')
        assert.same({ 'grass', 'grass', 'grass', 'grass' }, garden.plants('Charlie'))
      end)
    end)
  end)

  describe('full garden', function()
    it('for alice, first student\'s garden', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'violets', 'radishes', 'violets', 'radishes' }, garden.plants('Alice'))
    end)

    it('for bob, second student\'s garden', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'clover', 'grass', 'clover', 'clover' }, garden.plants('Bob'))
    end)

    it('for charlie', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'violets', 'violets', 'clover', 'grass' }, garden.plants('Charlie'))
    end)

    it('for david', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'radishes', 'violets', 'clover', 'radishes' }, garden.plants('David'))
    end)

    it('for eve', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'clover', 'grass', 'radishes', 'grass' }, garden.plants('Eve'))
    end)

    it('for fred', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'grass', 'clover', 'violets', 'clover' }, garden.plants('Fred'))
    end)

    it('for ginny', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'clover', 'grass', 'grass', 'clover' }, garden.plants('Ginny'))
    end)

    it('for harriet', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'violets', 'radishes', 'radishes', 'violets' }, garden.plants('Harriet'))
    end)

    it('for ileana', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'grass', 'clover', 'violets', 'clover' }, garden.plants('Ileana'))
    end)

    it('for joseph', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'violets', 'clover', 'violets', 'grass' }, garden.plants('Joseph'))
    end)

    it('for kincaid, second to last student\'s garden', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'grass', 'clover', 'clover', 'grass' }, garden.plants('Kincaid'))
    end)

    it('for larry, last student\'s garden', function()
      local garden = Garden('VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV')
      assert.same({ 'grass', 'violets', 'clover', 'violets' }, garden.plants('Larry'))
    end)
  end)
end)
